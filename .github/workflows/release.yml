name: Build Release
on:
  workflow_dispatch:
  push:
    branches:
      - "master"
    paths-ignore:
      - '.gitignore'
      - 'LICENSE'
      - 'README.md'

jobs:
    build:
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build
          gradle-home-cache-cleanup: true
      - uses: actions/upload-artifact@v3
        if: success()
        with:
          name: MCXboxBroadcastExtension
          path: bootstrap/geyser/build/libs/MCXboxBroadcastExtension.jar
          if-no-files-found: error
      - uses: actions/upload-artifact@v3
        if: success()
        with:
          name: MCXboxBroadcastStandalone
          path: bootstrap/standalone/build/libs/MCXboxBroadcastStandalone.jar
          if-no-files-found: error
      - name: Get previous build number
        id: getPreviousBuild
        uses: WyriHaximus/github-action-get-previous-tag@v1
        if: success()
        with:
          fallback: ''
      - name: Get current build number
        id: getCurrentBuild
        if: success()
        env:
          PREVIOUS_BUILD: ${{ steps.getPreviousBuild.outputs.tag }}
        run: echo result=$((++PREVIOUS_BUILD)) >> $GITHUB_OUTPUT
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        if: success()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag_prefix: ''
          custom_tag: ${{ steps.getCurrentBuild.outputs.result }}
      - name: Generate release diff
        if: success()
        env:
          BEGIN_COMMIT: ${{ steps.getPreviousBuild.outputs.tag }}
          END_COMMIT: ${{ steps.getCurrentBuild.outputs.result }}
        run: git fetch --tags --force && git log --pretty=format:"* %s (%h)" ${BEGIN_COMMIT}..${END_COMMIT} > release_notes.md
      - name: Create release
        uses: ncipollo/release-action@v1
        if: success()
        with:
          artifacts: "bootstrap/geyser/build/libs/MCXboxBroadcastExtension.jar,bootstrap/standalone/build/libs/MCXboxBroadcastStandalone.jar,egg-m-c-xbox-broadcast.json"
          allowUpdates: true
          bodyFile: "release_notes.md"
          draft: false
          prerelease: false
          name: Build ${{ steps.getCurrentBuild.outputs.result }} (${{ github.ref_name }})
          tag: ${{ steps.getCurrentBuild.outputs.result }}
          token: ${{ secrets.GITHUB_TOKEN }}